HIGH PRIORITY
#####################################################################################

- GenomeDict and ConstantDict
    - load these from the existing dictionaries, rather than reading from files, when an object is created

- SimpleAI2 
    - Fix PickUp

- RNNAI
    - impliment and test rudimentary feed forward network
    - add prediction learning
    - add reinforcement learning

- UI
    - visualization of rudimentary feed forward network


MEDIUM PRIORITY
#####################################################################################
- AppleTree
    - impliment tree size and growth
    - make the genome properties that affect the fruit also affect the shape of the tree
    - impliment apple size

- Water
    - needs to be made ponds of water, not water bottles

Day Night Cycles
    - add day night cycles, with full moon creating less light (but not no light) during the night
    - length and of day (in terms of # of unity updates) and proportion day to night set in world.config

Animals
    - Convert as many of data structures as possible to arrays and eliminate lists and dicts
    - Convert motor system checks to lists of indexes approach

Phenotype 
    - Convert Phenotype traitDict to <string,float> instead of <string,string>, and deal with
        all the consequences where it was being used and recast to int or float
    - Rename floatTrait to proportionTrait
    - Create binaryFloatTrait that works like floatTrait, except that bitstring is converted from binary to 
        decimal before length division, instead of summed

DriveSystem
    - drive updates should be adjusted to work with the new "day" length
        thirst: 
            remove thirst_change from animal.config
            
            if 1 "day" = 1000 updates, then thirst should tick up by 1/1000 each update
        hunger:
            remove hunger_change from animal.config
            if 1 "day" = 1000 updates, then hunger should tick up by 1/1000 each update
            calories_required should replace hunger_change in animal.config

HumanMotorSystem
    - Drink needs to update thirst drive by a function of the size of a drink and water requirements per day
        size of a drink (amount of water in hands) is about 0.25 kg
        water requirements should be derived from a function of mass and percent water (both in human.config, and phenotype)
        humans 
            are 60 kg, .65 water, (so about 39kg water), and drink about 3 kg per day (1/13), about 0.08 their water amount
            we make this a general rule that an animal's water requirement is 0.08 * mass * water_percentage
            so a human needs 3 kg, each drink is 0.25 kg, so each act of drinking lowers thirst by 0.25/3 = .083
        elephants
            an elephant weighs 4000 kg, .65 water, 2600*.08 = 208 kg needed per day
            an elephant can drink 10 kg per drink, and so each drink lowers thirst by 10/208 = 0.048
    - Eat needs to update hunger by a function of:
        - the size of the food consumed
        - what it is composed of
        - how well the animal metabolizes that food
        - its overall caloric needs
        - humans
            - need 2000 calories per day
            - calories of each item of food is, for each type of ingredient (sugar, protein, fat, etc)
                grams of that thing * metabolism rate of that thing * calories per gram of that thing
        - eat needs to check if there is poison in the food, and if so, harm the 

Genotype
    - remove the constant/gene distinction, everything is gene, mutable or immutable,
        but must check to make sure value generation is working correctly

Objects
    - Add a second kind of tree called pine tree
        - have its genes dictate its height, width, & color
        - make the tree grow in height over time to its max height
        - make the tree produce pine cones that have no nutrition and bad health
    - Add deer
        - - sit, stand, lay, sleep, wake, walk, rotate, eat (from ground), drink
    - Add elephants
        - - sit, stand, lay, sleep, wake, walk, rotate, eat (from ground), drink, hitWithTrunk
    - Add wolves
        - sit, stand, lay, sleep, wake, walk, rotate, eat (from ground), drink
    - instead of reading each object's .config file as it is created, we need to read them all at the beginning

Ground
    - Needs to be patches of grass of varying properties
        - height
        - color (green to yellow-green)
        - minimal to no nutrition, correlated with color
        - some way to deal with borders

LOW PRIORITY
#####################################################################################

Collisions
    - Pre-fixing animator and physics, impliment collisions
        - if impact is too large (determined as function of force from collider & mass of collided)
            - object falls over
            - health damage occurs

Wolf
    - bite and claw actions, causing damage

Human
    - hit action, causing damage

AIs
    - move FOVDetection and other AI functionality from Human/Animal to within the AI script 
    - make sure AI scripts have no way to access anything other than the information they are passed

Remove Animator
    - have all animations be a static change from position x to position y
    - call animations directly from script
    - no animation loops

Add Realistic Physics
    - Objects should fall over, run into each other etc.
    - stand up, sit down, lay down, rotate, take steps should all work with this system
    - ideally, pick up would too, hand must grasp an object, if it is too big or too heavy it wont work

QUESTIONS
#####################################################################################
    - what does gameObject.SetActive(true) do?
    - when an object is created, but before its position is changed, where does it appear, if at all? Is that what SetActive does, make it appear
        after its position has been set?